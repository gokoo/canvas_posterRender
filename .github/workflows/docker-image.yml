# .github/workflows/docker-build.yml

name: Build and Push Docker Image

# 当代码被推送到main分支时，自动触发此流程
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    # 任务运行在一个标准的、由GitHub提供的Ubuntu Linux服务器上
    runs-on: ubuntu-latest

    steps:
      # 第一步：获取您的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置QEMU，以便可以构建多架构镜像
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 第三步：设置Docker Buildx，这是一个更强大的构建工具
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 第四步：使用我们配置的秘密，登录到Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 第五步：构建并推送镜像
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          # 将构建上下文(工作区)直接设置为node-poster-service文件夹
          context: ./node-poster-service
          # 因为Dockerfile就在这个上下文里，所以file参数可以省略，它会自动查找
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/canvas_posterrender:latest
          platforms: linux/amd64,linux/arm64
